# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- The number of pods to run
replicaCount: 1

image:
  # -- The image used by the deployment
  repository: nginx
  # -- The pull policy of the image
  pullPolicy: IfNotPresent
  # -- The tag of the image used
  tag: ""

# -- Secrets with credentials to pull images from a private registry
imagePullSecrets: []

# -- Provide a name, default value will be `Chart.name`
nameOverride: ""

# -- String to fully override
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations for the all deployed pods
podAnnotations: {}

# -- The security context used by the pods
podSecurityContext: {}
  # fsGroup: 2000

# -- The security context used by the containers in the pods
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- The type of service
  type: ClusterIP
  # -- The port used by the service
  port: 80

ingress:
  # -- Whether to enable ingress for the service
  enabled: false
  # -- Defines which ingress controller will implement the resource
  className: "nginx"
  # -- Additional ingress annotations
  annotations: {}
    # cert-manager.io/cluster-issuer: zerossl
  # -- List of ingress hosts
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- Ingress TLS configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests for the pods
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Enable Horizontal Pod Autoscaler ([HPA])
  enabled: false
  # -- Minimum number of replicas for the deployment [HPA]
  minReplicas: 1
  # -- Maximum number of replicas for the deployment [HPA]
  maxReplicas: 3
  # -- Average cpu utilization percentage for the deployment [HPA]
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node selector
nodeSelector: {}

# -- Tolerations for use with node taints
tolerations: []

# -- Assign custom [affinity] rules to the deployment
affinity: {}

# -- The key value pairs that will be put in the ConfigMap manifests that will be used by all the pods.
config: {}

secretStoreRef:
  # -- The name of the external-secrets provider
  ## Ref: https://external-secrets.io/v0.8.3/provider/aws-parameter-store/
  name: aws-parameter-store
  # -- Which kind of secretStore of the external-secrets
  ## Ref: https://external-secrets.io/v0.8.3/api/secretstore/
  kind: ClusterSecretStore

# -- The key value pairs that will be put in the Secret manifests that will be used by all the pods.
secrets: {}
  # example uncomment below
  # secret-name-in-the-store:
  #   key: value
